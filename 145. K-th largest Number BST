#include <bits/stdc++.h> 
/************************************************************
    Following is the Binary Search Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
int getcnt(TreeNode<int> *root){
    if(!root) return 0;
    return 1+getcnt(root->left)+getcnt(root->right);
}

int KthLargestNumber(TreeNode<int>* root, int k) 
{
    // Write your code here.
    if(!root) return -1;
    int n = getcnt(root);
    if(k > n) return -1;
    k = n-k+1;
    int cnt = 0;
    int ans;
    while(root){
        if(!root->left){
            cnt++;
            if(cnt == k) ans = root->data;
            root = root->right;
        }
            
        else{
            TreeNode<int> *prev = root->left;
            while(prev->right && prev->right != root)
                prev = prev->right;
            if(prev->right == NULL){
                prev->right = root;
                root = root->left;
            }
            else{
                prev->right = NULL;
                cnt++;
                if(cnt == k) ans = root->data;
                root = root->right;
            }
        }
    }
    return ans;
}
