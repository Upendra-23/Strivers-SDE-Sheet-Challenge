#include <bits/stdc++.h> 
void dfs(int node,vector<int> &vis,stack<int> &s,vector<int> adj[]){
    vis[node] = 1;
    for(auto it:adj[node]){
        if(!vis[it])
            dfs(it,vis,s,adj);
    }
    s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    vector<int> adj[v];
    for(auto it:edges)
        adj[it[0]].push_back(it[1]);
    
    stack<int> s;
    vector<int> vis(v,0);
    for(int i=0;i<v;i++){
        if(!vis[i])
            dfs(i,vis,s,adj);
    }

    vector<int> ans;
    while(!s.empty()){
        ans.push_back(s.top());
        s.pop();
    }
    return ans;
}
