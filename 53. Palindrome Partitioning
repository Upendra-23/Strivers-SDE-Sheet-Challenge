#include <bits/stdc++.h> 
bool ispalindrome(string &str){
    int low = 0, high = str.size()-1;
    while(low < high){
        if(str[low] != str[high]) return false;
        low++;
        high--;
    }
    return true;
}
void dfs(int ind,int n,string &s,vector<string> &ds,vector<vector<string>> &ans){
    if(ind == n){
        ans.push_back(ds);
        return;
    }
    for(int i=ind;i<n;i++){
        string str = s.substr(ind,i-ind+1);
        if(ispalindrome(str)){
            ds.push_back(str);
            dfs(i+1,n,s,ds,ans);
            ds.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
    vector<vector<string>> ans;
    vector<string> ds;
    dfs(0,s.size(),s,ds,ans);
    return ans;
}
