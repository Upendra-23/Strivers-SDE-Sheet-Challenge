void dfs(int node,vector<int> &vis,vector<int> &arr,vector<int> adj[]){
    vis[node] = 1;
    arr.push_back(node);
    for(auto it:adj[node]){
        if(!vis[it])
            dfs(it,vis,arr,adj);
    }
}

vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    // Write your code here

    vector<int> adj[V];
    for(auto it:edges){
        adj[it[0]].push_back(it[1]);
        adj[it[1]].push_back(it[0]);
    }

    vector<int> vis(V,0);
    vector<vector<int>> ans;
    for(int i=0;i<V;i++){
        vector<int> arr;
        if(!vis[i]){
            dfs(i,vis,arr,adj);
            ans.push_back(arr);
        }
    }
    return ans;
}
