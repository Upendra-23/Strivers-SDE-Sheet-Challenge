#include<bits/stdc++.h>

void dfs(int node,vector<int> &vis,stack<int> &s,vector<int> adj[]){
    vis[node] = 1;
    for(auto it:adj[node]){
        if(!vis[it])
            dfs(it,vis,s,adj);
    }
    s.push(node);
}

void dfs2(int node,vector<int> &vis,vector<int> &temp,vector<int> adj[]){
    vis[node] = 1;
    temp.push_back(node);
    for(auto it:adj[node]){
        if(!vis[it])
            dfs2(it,vis,temp,adj);
    }
}

vector<vector<int>> stronglyConnectedComponents(int n, vector<vector<int>> &edges)
{
    // Write your code here.
    vector<int> adj[n];
    for(auto it:edges)
        adj[it[0]].push_back(it[1]);
    
    vector<int> vis(n,0);
    stack<int> s;
    for(int i=0;i<n;i++){
        if(!vis[i])
            dfs(i,vis,s,adj);
    }

    vector<int> adjT[n];
    for(int i=0;i<n;i++){
        vis[i] = 0;
        for(auto it:adj[i])
            adjT[it].push_back(i);
    }

    vector<vector<int>> ans;
    while(!s.empty()){
        int node = s.top();
        s.pop();
        if(!vis[node]){
            vector<int> temp;
            dfs2(node,vis,temp,adjT);
            ans.push_back(temp);
        }
    }

    return ans;

}
