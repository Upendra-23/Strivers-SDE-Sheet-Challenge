#include <bits/stdc++.h>
void dfs(int ind,int n,string ds,string s,unordered_set<string> &st,vector<string> &ans){
    if(ind == n){
        ans.push_back(ds);
        return;
    }
    for(int i=ind;i<n;i++){
        string str = s.substr(ind,i-ind+1);
        if(st.find(str) != st.end()){
            dfs(i+1,n,ds+str+" ",s,st,ans);
        }
    }
} 
vector<string> wordBreak(string &s, vector<string> &dictionary)
{
    vector<string> ans;
    unordered_set<string> st(dictionary.begin(),dictionary.end());
    dfs(0,s.size(),"",s,st,ans);
    return ans;
}
