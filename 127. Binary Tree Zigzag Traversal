#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int> ans;
    if(!root) return ans;
    queue<BinaryTreeNode<int>*> q;
    stack<int> s;
    q.push(root);
    bool leftToRight = true;
    while(!q.empty()){
        int size = q.size();
        while(size--){
            root = q.front();
            q.pop();
            if(leftToRight) ans.push_back(root->data);
            else s.push(root->data);
            if(root->left) q.push(root->left);
            if(root->right) q.push(root->right);
        }
        if(!leftToRight){
            while(!s.empty()){
                ans.push_back(s.top());
                s.pop();
            }
        }
        leftToRight = !leftToRight;
    }
    return ans;

}
