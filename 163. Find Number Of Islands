#include<bits/stdc++.h>
bool isvalid(int row,int col,int n,int m){
   return row >= 0 && row < n && col >= 0 && col < m;
}
void bfs(int row,int col,vector<vector<int>> &vis,int **arr,int n,int m){
   queue<pair<int,int>> q;
   q.push({row,col});
   vis[row][col] = 1;
   while(!q.empty()){
      row = q.front().first;
      col = q.front().second;
      q.pop();
      for(int i=-1;i<=1;i++){
         for(int j=-1;j<=1;j++){
            int nrow = row + i;
            int ncol = col + j;
            if(isvalid(nrow,ncol,n,m) && !vis[nrow][ncol] && arr[nrow][ncol] == 1){
               vis[nrow][ncol] = 1;
               q.push({nrow,ncol});
            }
         }
      }
   }
}
int getTotalIslands(int** arr, int n, int m)
{
   // Write your code here.
   vector<vector<int>> vis(n,vector<int> (m,0));
   int cnt = 0;
   for(int i=0;i<n;i++){
      for(int j=0;j<m;j++){
         if(arr[i][j] == 1 && !vis[i][j]){
            cnt++;
            bfs(i,j,vis,arr,n,m);
         }
      }
   }
   return cnt;
}
