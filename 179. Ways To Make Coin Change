#include<bits/stdc++.h>
long countWaysToMakeChange(int *arr, int n, int value)
{
   vector<vector<long>> dp(n,vector<long> (value+1,0));
   
   for(int target=0;target<=value;target++){
       if(target%arr[0] == 0) dp[0][target] = 1;
       else dp[0][target] = 0;
   }

   for(int ind=1;ind<n;ind++){
       for(int target=0;target<=value;target++){
           long nottake = dp[ind-1][target];
           long take = 0;
           if(arr[ind] <= target)
                take = dp[ind][target-arr[ind]];
           dp[ind][target] = take + nottake;
       }
   }

   return dp[n-1][value];
    
}
