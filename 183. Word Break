#include <bits/stdc++.h> 
bool dfs(int ind,int n,string &target,unordered_set<string> &s,vector<int> &dp){
    if(ind == n) return true;
    if(dp[ind] != -1) return dp[ind];
    for(int i=ind;i<n;i++){
        string str = target.substr(ind,i-ind+1);
        if(s.find(str) != s.end()){
            if(dfs(i+1,n,target,s,dp))
                return dp[ind] = true;
        }
    }
    return dp[ind] = false;
}
bool wordBreak(vector < string > & arr, int n, string & target) {
    unordered_set<string> s;
    for(auto it:arr) s.insert(it);
    vector<int> dp(target.size(),-1);
    return dfs(0,target.size(),target,s,dp);
}
