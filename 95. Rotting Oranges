#include<bits/stdc++.h>
bool isvalid(int row,int col,int n,int m){
    return row >= 0 && row < n && col >= 0 && col < m;
}

int minTimeToRot(vector<vector<int>>& grid, int n, int m)
{
    queue<pair<int,int>> q;
    int freshCnt = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(grid[i][j] == 2)
                q.push({i,j});
            else if(grid[i][j] == 1)
                freshCnt++;
        }
    }

    if(freshCnt == 0) return 0;

    int dr[] = {-1,0,0,1};
    int dc[] = {0,-1,1,0};
    int t = -1;
    while(!q.empty()){
        int size = q.size();
        t++;
        while(size--){
            int row = q.front().first;
            int col = q.front().second;
            q.pop();
            for(int i=0;i<4;i++){
                int nrow = row + dr[i];
                int ncol = col + dc[i];
                if(isvalid(nrow,ncol,n,m) && grid[nrow][ncol] == 1){
                    grid[nrow][ncol] = 2;
                    freshCnt--;
                    q.push({nrow,ncol});
                }
            }
        }
    }
    return freshCnt == 0 ? t : -1;
}
