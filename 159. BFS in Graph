#include <bits/stdc++.h> 

void bfs(int node,vector<int> &vis,vector<int> &ans,map<int,set<int>> &adj){
    queue<int> q;
    q.push(node);
    vis[node] = 1;
    while(!q.empty()){
        int node = q.front();
        q.pop();
        ans.push_back(node);
        for(auto it:adj[node]){
            if(!vis[it]){
                vis[it] = 1;
                q.push(it);
            }
        }
    }
}

vector<int> BFS(int v, vector<pair<int, int>> edges)
{
    // Write your code here
    map<int,set<int>> adj;
    for(auto it:edges){
        int u = it.first;
        int v = it.second;
        adj[u].insert(v);
        adj[v].insert(u);
    }

    vector<int> vis(v,0);
    vector<int> ans;
    for(int i=0;i<v;i++){
        if(!vis[i])
            bfs(i,vis,ans,adj);
    }
    return ans;
}
