#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m,
 vector<pair<pair<int, int>, int>> &edges)
{
    // Write your code here.
    vector<pair<int,int>> adj[n+1];
    for(auto it:edges){
        int u = it.first.first;
        int v = it.first.second;
        int wt = it.second;
        adj[u].push_back({v,wt});
        adj[v].push_back({u,wt});
    }

    vector<int> vis(n+1,0);
    vector<pair<pair<int, int>, int>> ans;
    priority_queue<pair<pair<int,int>,int>,vector<pair<pair<int,int>,int>>,greater<pair<pair<int,int>,int>>> pq;
    pq.push({{0,1},-1});
    while(!pq.empty()){
        auto it = pq.top();
        pq.pop();
        int node = it.first.second;
        int par = it.second;
        int wt = it.first.first;

        if(vis[node] == 1) continue;
        if(par != -1) ans.push_back({{par,node},wt});
        vis[node] = 1;

        for(auto it:adj[node]){
            int adjnode = it.first;
            int edgewt = it.second;
            if(!vis[adjnode])
                pq.push({{edgewt,adjnode},node});
        }
    }
    return ans;
}
