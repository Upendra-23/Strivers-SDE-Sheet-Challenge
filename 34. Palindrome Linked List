LinkedListNode<int>* reverse(LinkedListNode<int> *head){
    LinkedListNode<int> *curr = head, *next = NULL, *prev = NULL;
    while(curr){
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    return prev;
}

bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.
    if(!head || !head->next) return true;
    LinkedListNode<int> *slow = head, *fast = head, *prev = NULL;
    while(fast && fast->next){
        prev = slow;
        slow = slow->next;
        fast = fast->next->next;
    }
    LinkedListNode<int>* head2 = NULL;
    prev->next = NULL;
    if(!fast) head2 = slow;
    else head2 = slow->next;
    head2 = reverse(head2);

    while(head && head2){
        if(head->data != head2->data)
            return false;
        head = head->next;
        head2 = head2->next;
    }
    return true;
}
